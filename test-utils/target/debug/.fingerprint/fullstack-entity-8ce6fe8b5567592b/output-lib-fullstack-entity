{"message":"not all trait items implemented, missing: `update`, `delete_all`, `delete_by_id`, `get_all`, `get_by_id`, `watch`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":212,"byte_end":237,"line_start":13,"line_end":13,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"impl Store for InMemStore {","highlight_start":1,"highlight_end":26}],"label":"missing `update`, `delete_all`, `delete_by_id`, `get_all`, `get_by_id`, `watch` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/mod.rs","byte_start":319,"byte_end":415,"line_start":12,"line_end":12,"column_start":5,"column_end":101,"is_primary":false,"text":[{"text":"    async fn update<E: Entity>(&self, id: &E::ID, update: &E::Update) -> Result<(), Box<dyn Error>>;","highlight_start":5,"highlight_end":101}],"label":"`update` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/mod.rs","byte_start":420,"byte_end":488,"line_start":13,"line_end":13,"column_start":5,"column_end":73,"is_primary":false,"text":[{"text":"    async fn delete_all<E: Entity>(&self) -> Result<(), Box<dyn Error>>;","highlight_start":5,"highlight_end":73}],"label":"`delete_all` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/mod.rs","byte_start":493,"byte_end":575,"line_start":14,"line_end":14,"column_start":5,"column_end":87,"is_primary":false,"text":[{"text":"    async fn delete_by_id<E: Entity>(&self, id: &E::ID) -> Result<(), Box<dyn Error>>;","highlight_start":5,"highlight_end":87}],"label":"`delete_by_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/mod.rs","byte_start":580,"byte_end":649,"line_start":15,"line_end":15,"column_start":5,"column_end":74,"is_primary":false,"text":[{"text":"    async fn get_all<E: Entity>(&self) -> Result<Vec<E>, Box<dyn Error>>;","highlight_start":5,"highlight_end":74}],"label":"`get_all` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/mod.rs","byte_start":654,"byte_end":732,"line_start":16,"line_end":16,"column_start":5,"column_end":83,"is_primary":false,"text":[{"text":"    async fn get_by_id<E: Entity>(&self, id: &E::ID) -> Result<E, Box<dyn Error>>;","highlight_start":5,"highlight_end":83}],"label":"`get_by_id` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/mod.rs","byte_start":737,"byte_end":850,"line_start":17,"line_end":20,"column_start":5,"column_end":37,"is_primary":false,"text":[{"text":"    async fn watch<E: Entity>(","highlight_start":5,"highlight_end":31},{"text":"        &self,","highlight_start":1,"highlight_end":15},{"text":"        channel: Sender<Event<E>>,","highlight_start":1,"highlight_end":35},{"text":"    ) -> Result<(), Box<dyn Error>>;","highlight_start":1,"highlight_end":37}],"label":"`watch` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn update<E>(&'life0 self, _: &'life1 <E as entity::Entity>::ID, _: &'life2 <E as entity::Entity>::Update) -> Pin<Box<(dyn Future<Output = Result<(), Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }`","code":null,"level":"help","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":533,"byte_end":533,"line_start":23,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn update<E>(&'life0 self, _: &'life1 <E as entity::Entity>::ID, _: &'life2 <E as entity::Entity>::Update) -> Pin<Box<(dyn Future<Output = Result<(), Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn delete_all<E>(&'life0 self) -> Pin<Box<(dyn Future<Output = Result<(), Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }`","code":null,"level":"help","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":533,"byte_end":533,"line_start":23,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn delete_all<E>(&'life0 self) -> Pin<Box<(dyn Future<Output = Result<(), Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn delete_by_id<E>(&'life0 self, _: &'life1 <E as entity::Entity>::ID) -> Pin<Box<(dyn Future<Output = Result<(), Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }`","code":null,"level":"help","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":533,"byte_end":533,"line_start":23,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn delete_by_id<E>(&'life0 self, _: &'life1 <E as entity::Entity>::ID) -> Pin<Box<(dyn Future<Output = Result<(), Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn get_all<E>(&'life0 self) -> Pin<Box<(dyn Future<Output = Result<Vec<E>, Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }`","code":null,"level":"help","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":533,"byte_end":533,"line_start":23,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_all<E>(&'life0 self) -> Pin<Box<(dyn Future<Output = Result<Vec<E>, Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn get_by_id<E>(&'life0 self, _: &'life1 <E as entity::Entity>::ID) -> Pin<Box<(dyn Future<Output = Result<E, Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }`","code":null,"level":"help","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":533,"byte_end":533,"line_start":23,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn get_by_id<E>(&'life0 self, _: &'life1 <E as entity::Entity>::ID) -> Pin<Box<(dyn Future<Output = Result<E, Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"implement the missing item: `fn watch<E>(&'life0 self, _: tokio::sync::broadcast::Sender<event::Event<E>>) -> Pin<Box<(dyn Future<Output = Result<(), Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }`","code":null,"level":"help","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":533,"byte_end":533,"line_start":23,"line_end":23,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn watch<E>(&'life0 self, _: tokio::sync::broadcast::Sender<event::Event<E>>) -> Pin<Box<(dyn Future<Output = Result<(), Box<(dyn StdError + 'static)>>> + Send + 'async_trait)>> where E: entity::Entity { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m: not all trait items implemented, missing: `update`, `delete_all`, `delete_by_id`, `get_all`, `get_by_id`, `watch`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/tim/Projects/fullstack-entity/src/store/in_mem.rs:13:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mimpl Store for InMemStore {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `update`, `delete_all`, `delete_by_id`, `get_all`, `get_by_id`, `watch` in implementation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/home/tim/Projects/fullstack-entity/src/store/mod.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn update<E: Entity>(&self, id: &E::ID, update: &E::Update) -> Result<(), Box<dyn Error>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`update` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn delete_all<E: Entity>(&self) -> Result<(), Box<dyn Error>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`delete_all` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn delete_by_id<E: Entity>(&self, id: &E::ID) -> Result<(), Box<dyn Error>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`delete_by_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn get_all<E: Entity>(&self) -> Result<Vec<E>, Box<dyn Error>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_all` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    async fn get_by_id<E: Entity>(&self, id: &E::ID) -> Result<E, Box<dyn Error>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`get_by_id` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    async fn watch<E: Entity>(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        &self,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        channel: Sender<Event<E>>,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ) -> Result<(), Box<dyn Error>>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`watch` from trait\u001b[0m\n\n"}
{"message":"no method named `insert` found for reference `&E` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":397,"byte_end":403,"line_start":16,"line_end":16,"column_start":41,"column_end":47,"is_primary":true,"text":[{"text":"      Entry::Occupied(map) => map.get().insert(entity),","highlight_start":41,"highlight_end":47}],"label":"method not found in `&E`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `insert` found for reference `&E` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/tim/Projects/fullstack-entity/src/store/in_mem.rs:16:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m      Entry::Occupied(map) => map.get().insert(entity),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `&E`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":458,"byte_end":500,"line_start":18,"line_end":18,"column_start":18,"column_end":60,"is_primary":true,"text":[{"text":"        v.insert(HashMap::from([(entity.get_id(), entity)]));","highlight_start":18,"highlight_end":60}],"label":"expected type parameter `E`, found `HashMap<&<E as Entity>::ID, &E>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":258,"byte_end":259,"line_start":14,"line_end":14,"column_start":19,"column_end":20,"is_primary":false,"text":[{"text":"  async fn create<E: Entity>(&self, entity: &E) -> Result<(), Box<dyn Error>> {","highlight_start":19,"highlight_end":20}],"label":"this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":451,"byte_end":457,"line_start":18,"line_end":18,"column_start":11,"column_end":17,"is_primary":false,"text":[{"text":"        v.insert(HashMap::from([(entity.get_id(), entity)]));","highlight_start":11,"highlight_end":17}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected type parameter `E`\n           found struct `HashMap<&<E as entity::Entity>::ID, &E>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the return type of this call is `HashMap<&<E as entity::Entity>::ID, &E>` due to the type of the argument passed","code":null,"level":"help","spans":[{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":458,"byte_end":500,"line_start":18,"line_end":18,"column_start":18,"column_end":60,"is_primary":false,"text":[{"text":"        v.insert(HashMap::from([(entity.get_id(), entity)]));","highlight_start":18,"highlight_end":60}],"label":"this argument influences the return type of `insert`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/tim/Projects/fullstack-entity/src/store/in_mem.rs","byte_start":449,"byte_end":501,"line_start":18,"line_end":18,"column_start":9,"column_end":61,"is_primary":true,"text":[{"text":"        v.insert(HashMap::from([(entity.get_id(), entity)]));","highlight_start":9,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"method defined here","code":null,"level":"note","spans":[{"file_name":"/home/tim/.cargo/registry/src/index.crates.io-6f17d22bba15001f/type-map-0.5.0/src/lib.rs","byte_start":8472,"byte_end":8478,"line_start":256,"line_end":256,"column_start":16,"column_end":22,"is_primary":true,"text":[{"text":"        pub fn insert(self, value: T) -> &'a mut T {","highlight_start":16,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/tim/Projects/fullstack-entity/src/store/in_mem.rs:18:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m  async fn create<E: Entity>(&self, entity: &E) -> Result<(), Box<dyn Error>> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis type parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        v.insert(HashMap::from([(entity.get_id(), entity)]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected type parameter `E`, found `HashMap<&<E as Entity>::ID, &E>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this method are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected type parameter `\u001b[0m\u001b[0m\u001b[1mE\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                       found struct `\u001b[0m\u001b[0m\u001b[1mHashMap<&<E as entity::Entity>::ID, &E>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the return type of this call is `HashMap<&<E as entity::Entity>::ID, &E>` due to the type of the argument passed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/tim/Projects/fullstack-entity/src/store/in_mem.rs:18:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        v.insert(HashMap::from([(entity.get_id(), entity)]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis argument influences the return type of `insert`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: method defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/tim/.cargo/registry/src/index.crates.io-6f17d22bba15001f/type-map-0.5.0/src/lib.rs:256:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub fn insert(self, value: T) -> &'a mut T {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 3 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 3 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0046, E0308, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0046, E0308, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0046`.\u001b[0m\n"}
